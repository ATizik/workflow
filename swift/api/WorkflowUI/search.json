{"Structs/ViewRegistry.html#/s:10WorkflowUI12ViewRegistryVACycfc":{"name":"init()","abstract":"<p>Initializes an empty registry.</p>","parent_name":"ViewRegistry"},"Structs/ViewRegistry.html#/s:10WorkflowUI12ViewRegistryV8register06screenC14ControllerTypeyxm_tAA06ScreencG0Cyq_GRbzAA0I0R_r0_lF":{"name":"register(screenViewControllerType:)","abstract":"<p>Convenience registration method that wraps a simple <code>UIViewController</code> in a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ScreenViewController.html\">ScreenViewController</a></code> to provide convenient","parent_name":"ViewRegistry"},"Structs/ViewRegistry.html#/s:10WorkflowUI12ViewRegistryV010canProvideC03forSbxm_tAA6ScreenRzlF":{"name":"canProvideView(for:)","abstract":"<p>Returns <code>true</code> is a factory block has previously been registered for the screen type <code>T</code>.</p>","parent_name":"ViewRegistry"},"Structs/ViewRegistry.html#/s:10WorkflowUI12ViewRegistryV07provideC03forAA06ScreenC10ControllerCyxGx_tAA0G0RzlF":{"name":"provideView(for:)","abstract":"<p>Instantiates and returns a view instance for the given screen model.</p>","parent_name":"ViewRegistry"},"Structs/ViewRegistry.html#/s:10WorkflowUI12ViewRegistryV5merge4withyAC_tF":{"name":"merge(with:)","abstract":"<p>Merges from another registry. If a screen type is registered with both,","parent_name":"ViewRegistry"},"Structs/ViewRegistry.html#/s:10WorkflowUI12ViewRegistryV6merged4withA2C_tF":{"name":"merged(with:)","abstract":"<p>The returned value is identical to the result of calling <code>merge(from:)</code> on <code>self</code>.</p>","parent_name":"ViewRegistry"},"Structs/AnyScreen.html#/s:10WorkflowUI9AnyScreenVyACxcAA0D0Rzlufc":{"name":"init(_:)","parent_name":"AnyScreen"},"Structs/AnyScreen.html":{"name":"AnyScreen"},"Structs/ViewRegistry.html":{"name":"ViewRegistry","abstract":"<p>Maps screen models into live views.</p>"},"Protocols.html#/s:10WorkflowUI6ScreenP":{"name":"Screen","abstract":"<p>Screens are the building blocks of an interactive application.</p>"},"Classes/ScreenViewController.html#/s:10WorkflowUI20ScreenViewControllerC12viewRegistryAA0dG0Vvp":{"name":"viewRegistry","parent_name":"ScreenViewController"},"Classes/ScreenViewController.html#/s:10WorkflowUI20ScreenViewControllerC6screenxvp":{"name":"screen","parent_name":"ScreenViewController"},"Classes/ScreenViewController.html#/s:10WorkflowUI20ScreenViewControllerC10screenTypeAA0C0_pXpvp":{"name":"screenType","parent_name":"ScreenViewController"},"Classes/ScreenViewController.html#/s:10WorkflowUI20ScreenViewControllerC6screen12viewRegistryACyxGx_AA0dH0Vtcfc":{"name":"init(screen:viewRegistry:)","parent_name":"ScreenViewController"},"Classes/ScreenViewController.html#/s:10WorkflowUI20ScreenViewControllerC6update6screenyx_tF":{"name":"update(screen:)","parent_name":"ScreenViewController"},"Classes/ScreenViewController.html#/s:10WorkflowUI20ScreenViewControllerC15screenDidChange4fromyx_tF":{"name":"screenDidChange(from:)","abstract":"<p>Subclasses should override this method in order to update any relevant UI bits when the screen model changes.</p>","parent_name":"ScreenViewController"},"Classes/ContainerViewController.html#/s:10WorkflowUI23ContainerViewControllerC6output13ReactiveSwift6SignalCyx6Result7NoErrorOGvp":{"name":"output","abstract":"<p>Emits output events from the bound workflow.</p>","parent_name":"ContainerViewController"},"Classes/ContainerViewController.html#/s:10WorkflowUI23ContainerViewControllerC8workflow12viewRegistryACyxq_Gqd___AA0dH0Vtc6OutputQyd__Rsz9RenderingQyd__Rs_0A0AMRd__lufc":{"name":"init(workflow:viewRegistry:)","parent_name":"ContainerViewController"},"Classes/ContainerViewController.html#/s:10WorkflowUI23ContainerViewControllerC5coderACyxq_GSgSo7NSCoderC_tcfc":{"name":"init(coder:)","parent_name":"ContainerViewController"},"Classes/ContainerViewController.html#/s:10WorkflowUI23ContainerViewControllerC11viewDidLoadyyF":{"name":"viewDidLoad()","parent_name":"ContainerViewController"},"Classes/ContainerViewController.html#/s:10WorkflowUI23ContainerViewControllerC21viewDidLayoutSubviewsyyF":{"name":"viewDidLayoutSubviews()","parent_name":"ContainerViewController"},"Classes/ContainerViewController.html#/s:10WorkflowUI23ContainerViewControllerC22childForStatusBarStyleSo06UIViewE0CSgvp":{"name":"childForStatusBarStyle","parent_name":"ContainerViewController"},"Classes/ContainerViewController.html#/s:10WorkflowUI23ContainerViewControllerC23childForStatusBarHiddenSo06UIViewE0CSgvp":{"name":"childForStatusBarHidden","parent_name":"ContainerViewController"},"Classes/ContainerViewController.html#/s:10WorkflowUI23ContainerViewControllerC31childForHomeIndicatorAutoHiddenSo06UIViewE0CSgvp":{"name":"childForHomeIndicatorAutoHidden","parent_name":"ContainerViewController"},"Classes/ContainerViewController.html#/s:10WorkflowUI23ContainerViewControllerC42childForScreenEdgesDeferringSystemGesturesSo06UIViewE0CSgvp":{"name":"childForScreenEdgesDeferringSystemGestures","parent_name":"ContainerViewController"},"Classes/ContainerViewController.html#/s:10WorkflowUI23ContainerViewControllerC30supportedInterfaceOrientationsSo26UIInterfaceOrientationMaskVvp":{"name":"supportedInterfaceOrientations","parent_name":"ContainerViewController"},"Classes/ContainerViewController.html":{"name":"ContainerViewController","abstract":"<p>Drives view controllers from a root Workflow.</p>"},"Classes/ScreenViewController.html":{"name":"ScreenViewController","abstract":"<p>Generic base class that should be subclassed in order to to define a UI implementation that is powered by the"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}