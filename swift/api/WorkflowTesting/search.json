{"Structs/WorkflowActionTester.html#/s:15WorkflowTesting0A12ActionTesterV4send6action16outputAssertionsACyxq_Gq__y6OutputQzSgXEtF":{"name":"send(action:outputAssertions:)","abstract":"<p>Sends an event to the reducer.</p>","parent_name":"WorkflowActionTester"},"Structs/WorkflowActionTester.html#/s:15WorkflowTesting0A12ActionTesterV11assertStateyACyxq_Gy0F0QzXEF":{"name":"assertState(_:)","abstract":"<p>Invokes the given closure (which is intended to contain test assertions) with the current state.</p>","parent_name":"WorkflowActionTester"},"Structs/ExpectedWorker.html#/s:15WorkflowTesting14ExpectedWorkerV6worker6outputACx_6OutputQzSgtc0A00D0Rzlufc":{"name":"init(worker:output:)","abstract":"<p>Create a new expected worker with an optional output. If <code>output</code> is not nil, it will be emitted","parent_name":"ExpectedWorker"},"Structs/ExpectedState.html#/s:15WorkflowTesting13ExpectedStateV5state12isEquivalentACyxGqd___Sbqd___qd__tctc0D0QzRsd__lufc":{"name":"init(state:isEquivalent:)","abstract":"<p>Create a new expected state from a state with an equivalence block. <code>isEquivalent</code> will be","parent_name":"ExpectedState"},"Structs/ExpectedState.html#/s:15WorkflowTesting13ExpectedStateV5stateACyxGqd___tcSQRd__0D0QzRsd__lufc":{"name":"init(state:)","parent_name":"ExpectedState"},"Structs/RenderExpectations.html#/s:15WorkflowTesting18RenderExpectationsV13expectedState0E7WorkersACyxGAA08ExpectedF0VyxGSg_SayAA0H6WorkerVGtcfc":{"name":"init(expectedState:expectedWorkers:)","parent_name":"RenderExpectations"},"Structs/RenderExpectations.html":{"name":"RenderExpectations","abstract":"<p>A set of expectations for use with the <code>WorkflowRenderTester</code>. All of the expectations must be fulfilled"},"Structs/ExpectedState.html":{"name":"ExpectedState"},"Structs/ExpectedWorker.html":{"name":"ExpectedWorker"},"Structs/WorkflowActionTester.html":{"name":"WorkflowActionTester","abstract":"<p>Testing helper that chains event sending and state/output assertions"},"Extensions/Workflow.html#/s:8WorkflowAAP0A7TestingE12renderTester12initialStateAC06RenderD0CyxG0F0Qz_tF":{"name":"renderTester(initialState:)","abstract":"<p>Returns a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/RenderTester.html\">RenderTester</a></code> with a specified initial state.</p>","parent_name":"Workflow"},"Extensions/Workflow.html#/s:8WorkflowAAP0A7TestingE12renderTesterAC06RenderD0CyxGyF":{"name":"renderTester()","abstract":"<p>Returns a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/RenderTester.html\">RenderTester</a></code> with an initial state provided by <code>self.makeInitialState()</code></p>","parent_name":"Workflow"},"Extensions/WorkflowAction.html#/s:8Workflow0A6ActionP0A7TestingE6tester9withStateAD0aB6TesterVy0A4TypeQzxGAI_0F0QZ_tFZ":{"name":"tester(withState:)","abstract":"<p>Returns a state tester containing <code>self</code>.</p>","parent_name":"WorkflowAction"},"Extensions/WorkflowAction.html":{"name":"WorkflowAction"},"Extensions/Workflow.html":{"name":"Workflow"},"Classes/RenderTester.html#/s:15WorkflowTesting12RenderTesterC6render4with10assertions4file4lineACyxGAA0C12ExpectationsVyxG_y9RenderingQzXEs12StaticStringVSutF":{"name":"render(with:assertions:file:line:)","abstract":"<p>Call <code>render</code> with a set of expectations. If the expectations have not been fulfilled, the test will fail.</p>","parent_name":"RenderTester"},"Classes/RenderTester.html#/s:15WorkflowTesting12RenderTesterC6assert5stateACyxGy5StateQzXE_tF":{"name":"assert(state:)","abstract":"<p>Assert the internal state.</p>","parent_name":"RenderTester"},"Classes/RenderTester.html":{"name":"RenderTester","abstract":"<p>Testing helper for validating the behavior of calls to <code>render</code>.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}